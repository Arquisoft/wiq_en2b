version: '3'
services:     
  WIQ_DB:
    container_name: postgresql-${teamname:-defaultASW}
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    image: postgres:latest
    profiles: ["dev", "prod"]
    networks:
      mynetwork:
        ipv4_address: 10.5.0.10
      
  api:
    container_name: api-${teamname:-defaultASW}
    image:  api:latest
    profiles: [ "dev", "prod" ]
    build:
      context: ./api
      args:
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        JWT_SECRET: ${JWT_SECRET}
    environment:
      - DATABASE_URL=jdbc:postgresql://WIQ_DB:5432/wiq
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      mynetwork:
        ipv4_address: 10.5.0.6
    depends_on:
        - WIQ_DB
      
  question-generator:
    container_name: question-generator-${teamname:-defaultASW}
    image: question-generator:latest
    profiles: [ "dev", "prod" ]
    build:
      context: ./questiongenerator
      args:
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    environment:
      - DATABASE_URL=jdbc:postgresql://WIQ_DB:5432/wiq
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    networks:
      mynetwork:
        ipv4_address: 10.5.0.11
    depends_on:
      - WIQ_DB
      
  grafana:
    image: grafana/grafana
    container_name: grafana-${teamname:-defaultASW}
    profiles: [ "dev" ]
    networks:
      mynetwork:
        ipv4_address: 10.5.0.7
    volumes:
      - grafana_data:/var/lib/grafana
      - ./quiz-api/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=9091
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus
    container_name: prometheus-${teamname:-defaultASW}
    profiles: ["dev"]
    networks:
      mynetwork:
        ipv4_address: 10.5.0.8
    volumes:
      - ./quiz-api/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    depends_on:
      - api

  webapp:
    container_name: webapp-${teamname:-defaultASW}
    image:  webapp:latest
    profiles: [ "dev", "prod" ]
    build:
      args:
        REACT_APP_API_ENDPOINT: ${API_URI}
      context: ./webapp
    environment:
      - REACT_APP_API_ENDPOINT=${API_URI}
    networks:
      mynetwork:
        ipv4_address: 10.5.0.9

  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      mynetwork:
        ipv4_address: 10.5.0.12
    ports:
      - "80:80"
    depends_on:
      - webapp
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  mynetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1